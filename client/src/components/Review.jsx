import React from 'react';
import Ratings from './Ratings.jsx';

const Review = (props) => {
// console.log(props.review)
let doesRecommend = props.recommend
// if (doesRecommend > numberOfRecommendations) {
//   className="GREEN"
// } ELSE {
//   CLASSNAME=""
// }
  return (
      <>
        <div className="card">
          <div className="review-title">{props.review.title}</div>
          <div className="content">
            <div className="card-rr">
              <div className="stars-container">
                <div className="starzzz">
                  <div className="rating">
                    {[...Array(5)].map((n, i) => i >= props.review.rating[0][1] ? <i key={i} className="far fa-star"></i> : <i key={i} className="fas fa-star"></i>)}
                  </div>
                </div>
                {/* </span> */}
              </div>
              <div className="recommendation">
                <span className="card recommendation-positive">
                  <div>
                    <svg width="24" height="24" viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                    focusable="false">
                      <path d="M12.032 22.063c5.55 0 10.05-4.5 10.05-10.05 0-5.55-4.5-10.05-10.05-10.05-5.55 0-10.05 4.5-10.05 10.05 0 5.55 4.5 10.05 10.05 10.05zm0 .95c-6.075 0-11-4.925-11-11 0-6.076 4.925-11 11-11s11 4.924 11 11c0 6.075-4.925 11-11 11zm4.462-15.168a1 1 0 011.512 1.31l-6.5 7.5a1 1 0 01-1.38.126l-3.75-3a1 1 0 111.249-1.562l2.999 2.4 5.87-6.774z" 
                      fillRule="evenodd">
                      </path>
                    </svg>
                  </div>
                <span>Would recommend</span>
                </span>
              </div>
            </div>
            <div className="user-review-info">
                <span>{props.review.name}</span>
                " - "
                <span className="review-date-time">{props.review.date}</span>
            </div>
            <div className="review-main-content">{props.review.content}</div>
          </div>
          <div className="review-card-metrics">
            <div className="review-dash-overlay">
              <div className="reviews-dashboards">
                  {props.review.rating.map((item, key) => {
                      return (<Ratings
                      key={key}
                      item={item[props.index]}
                      value={item[key]}
                      />
                  )})}
              </div>
            </div>
            <div>
              <div className="review-washelpful">
              Did you fnd this review helpful?
              </div>
              <div className="helpful-overlay">
                <div className="">
                <button type="button" className="review-was-helpful-feedback help-button">
                  "Helpful"
                </button>
                <button type="button" className="review-not-helpful-feedback">
                  "Not Helpful"
                </button>
                <span className="report-button">

                </span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </>
    )
}


export default Review;
            // <div>{props.review.content}</div>
          // <div className="">
          //   <div className="">
          //     <div>
          //       <div className="">{props.review.user}-</div>
          //       <div className="">{props.review.writtenDate}</div>
          //       <div className="">{props.review.content}</div>
          //     </div> 
          //       <div className="grid three">
          //       </div>
          //         <button className="">Helpful</button>
          //         <button className="">Not helpful</button>
          //         <span style={{textDecoration: 'underline', color: 'grey'}}>Report review</span>
          //   </div>
          // </div>

{/* <svg size="24" preserveAspectRatio="xMinYMin meet" version="1.1" viewBox="0 0 5 50" xmlns:xlink="http://www.w3.org/2000/svg" class="StaticRatingStars__SizedSvg-jref8-1 ifKIvx"><g><polygon class="starFill emptyStar" fill="#fff" points="18.3804527 17.5538712 3.57341884 17.5538227 15.5524968 26.0839651 10.9490362 39.9740092 22.9998469 31.3908403 35.0505989 39.9718199 30.4479632 26.0860159 42.4267599 17.5548252 27.6195159 17.5548252 22.9999796 3.61638342"></polygon><path class="starStroke emptyStar" fill="#888" d="M23,0.125 C23.548595,0.125 24.0427295,0.43633439 24.2838822,0.916322114 L24.3620682,1.10394446 L29.1238205,15.4714919 L44.4834654,15.4714919 C45.1040547,15.4669374 45.6559866,15.865131 45.847289,16.4554281 C46.0385914,17.0457252 45.8251153,17.6918966 45.3197896,18.0521171 L32.9094637,26.8906392 L37.659289,41.2205029 C37.8492978,41.8088537 37.6399199,42.4526832 37.1401666,42.8167858 C36.6404132,43.1808884 35.963305,43.1829213 35.4613737,42.8218261 L23,33.9484823 L10.5391034,42.8237342 C10.0368835,43.1855662 9.35893267,43.1835738 8.85884877,42.8187963 C8.35876487,42.4540187 8.14989861,41.8091377 8.34118809,41.2205029 L13.0910134,26.8887312 L0.680210361,18.0511631 C0.174884727,17.6909426 -0.0385914063,17.0447712 0.152710977,16.4544741 C0.34401336,15.864177 0.89594535,15.4659834 1.51653456,15.4705379 L16.8761795,15.4705379 L21.6379318,1.10394446 C21.8345878,0.519032587 22.3828306,0.125 23,0.125 Z M22.9999796,3.61638342 L18.3804527,17.5538712 L3.57341884,17.5538227 L15.5524968,26.0839651 L10.9490362,39.9740092 L22.9998469,31.3908403 L35.0505989,39.9718199 L30.4479632,26.0860159 L42.4267599,17.5548252 L27.6195159,17.5548252 L22.9999796,3.61638342 Z"></path></g><g><polygon class="starFill emptyStar" transform="translate(50, 0)" fill="#fff" points="18.3804527 17.5538712 3.57341884 17.5538227 15.5524968 26.0839651 10.9490362 39.9740092 22.9998469 31.3908403 35.0505989 39.9718199 30.4479632 26.0860159 42.4267599 17.5548252 27.6195159 17.5548252 22.9999796 3.61638342"></polygon><path class="starStroke emptyStar" transform="translate(50, 0)" fill="#888" d="M23,0.125 C23.548595,0.125 24.0427295,0.43633439 24.2838822,0.916322114 L24.3620682,1.10394446 L29.1238205,15.4714919 L44.4834654,15.4714919 C45.1040547,15.4669374 45.6559866,15.865131 45.847289,16.4554281 C46.0385914,17.0457252 45.8251153,17.6918966 45.3197896,18.0521171 L32.9094637,26.8906392 L37.659289,41.2205029 C37.8492978,41.8088537 37.6399199,42.4526832 37.1401666,42.8167858 C36.6404132,43.1808884 35.963305,43.1829213 35.4613737,42.8218261 L23,33.9484823 L10.5391034,42.8237342 C10.0368835,43.1855662 9.35893267,43.1835738 8.85884877,42.8187963 C8.35876487,42.4540187 8.14989861,41.8091377 8.34118809,41.2205029 L13.0910134,26.8887312 L0.680210361,18.0511631 C0.174884727,17.6909426 -0.0385914063,17.0447712 0.152710977,16.4544741 C0.34401336,15.864177 0.89594535,15.4659834 1.51653456,15.4705379 L16.8761795,15.4705379 L21.6379318,1.10394446 C21.8345878,0.519032587 22.3828306,0.125 23,0.125 Z M22.9999796,3.61638342 L18.3804527,17.5538712 L3.57341884,17.5538227 L15.5524968,26.0839651 L10.9490362,39.9740092 L22.9998469,31.3908403 L35.0505989,39.9718199 L30.4479632,26.0860159 L42.4267599,17.5548252 L27.6195159,17.5548252 L22.9999796,3.61638342 Z"></path></g><g><polygon class="starFill emptyStar" transform="translate(100, 0)" fill="#fff" points="18.3804527 17.5538712 3.57341884 17.5538227 15.5524968 26.0839651 10.9490362 39.9740092 22.9998469 31.3908403 35.0505989 39.9718199 30.4479632 26.0860159 42.4267599 17.5548252 27.6195159 17.5548252 22.9999796 3.61638342"></polygon><path class="starStroke emptyStar" transform="translate(100, 0)" fill="#888" d="M23,0.125 C23.548595,0.125 24.0427295,0.43633439 24.2838822,0.916322114 L24.3620682,1.10394446 L29.1238205,15.4714919 L44.4834654,15.4714919 C45.1040547,15.4669374 45.6559866,15.865131 45.847289,16.4554281 C46.0385914,17.0457252 45.8251153,17.6918966 45.3197896,18.0521171 L32.9094637,26.8906392 L37.659289,41.2205029 C37.8492978,41.8088537 37.6399199,42.4526832 37.1401666,42.8167858 C36.6404132,43.1808884 35.963305,43.1829213 35.4613737,42.8218261 L23,33.9484823 L10.5391034,42.8237342 C10.0368835,43.1855662 9.35893267,43.1835738 8.85884877,42.8187963 C8.35876487,42.4540187 8.14989861,41.8091377 8.34118809,41.2205029 L13.0910134,26.8887312 L0.680210361,18.0511631 C0.174884727,17.6909426 -0.0385914063,17.0447712 0.152710977,16.4544741 C0.34401336,15.864177 0.89594535,15.4659834 1.51653456,15.4705379 L16.8761795,15.4705379 L21.6379318,1.10394446 C21.8345878,0.519032587 22.3828306,0.125 23,0.125 Z M22.9999796,3.61638342 L18.3804527,17.5538712 L3.57341884,17.5538227 L15.5524968,26.0839651 L10.9490362,39.9740092 L22.9998469,31.3908403 L35.0505989,39.9718199 L30.4479632,26.0860159 L42.4267599,17.5548252 L27.6195159,17.5548252 L22.9999796,3.61638342 Z"></path></g><g><polygon class="starFill emptyStar" transform="translate(150, 0)" fill="#fff" points="18.3804527 17.5538712 3.57341884 17.5538227 15.5524968 26.0839651 10.9490362 39.9740092 22.9998469 31.3908403 35.0505989 39.9718199 30.4479632 26.0860159 42.4267599 17.5548252 27.6195159 17.5548252 22.9999796 3.61638342"></polygon><path class="starStroke emptyStar" transform="translate(150, 0)" fill="#888" d="M23,0.125 C23.548595,0.125 24.0427295,0.43633439 24.2838822,0.916322114 L24.3620682,1.10394446 L29.1238205,15.4714919 L44.4834654,15.4714919 C45.1040547,15.4669374 45.6559866,15.865131 45.847289,16.4554281 C46.0385914,17.0457252 45.8251153,17.6918966 45.3197896,18.0521171 L32.9094637,26.8906392 L37.659289,41.2205029 C37.8492978,41.8088537 37.6399199,42.4526832 37.1401666,42.8167858 C36.6404132,43.1808884 35.963305,43.1829213 35.4613737,42.8218261 L23,33.9484823 L10.5391034,42.8237342 C10.0368835,43.1855662 9.35893267,43.1835738 8.85884877,42.8187963 C8.35876487,42.4540187 8.14989861,41.8091377 8.34118809,41.2205029 L13.0910134,26.8887312 L0.680210361,18.0511631 C0.174884727,17.6909426 -0.0385914063,17.0447712 0.152710977,16.4544741 C0.34401336,15.864177 0.89594535,15.4659834 1.51653456,15.4705379 L16.8761795,15.4705379 L21.6379318,1.10394446 C21.8345878,0.519032587 22.3828306,0.125 23,0.125 Z M22.9999796,3.61638342 L18.3804527,17.5538712 L3.57341884,17.5538227 L15.5524968,26.0839651 L10.9490362,39.9740092 L22.9998469,31.3908403 L35.0505989,39.9718199 L30.4479632,26.0860159 L42.4267599,17.5548252 L27.6195159,17.5548252 L22.9999796,3.61638342 Z"></path></g><g><polygon class="starFill emptyStar" transform="translate(200, 0)" fill="#fff" points="18.3804527 17.5538712 3.57341884 17.5538227 15.5524968 26.0839651 10.9490362 39.9740092 22.9998469 31.3908403 35.0505989 39.9718199 30.4479632 26.0860159 42.4267599 17.5548252 27.6195159 17.5548252 22.9999796 3.61638342"></polygon><path class="starStroke emptyStar" transform="translate(200, 0)" fill="#888" d="M23,0.125 C23.548595,0.125 24.0427295,0.43633439 24.2838822,0.916322114 L24.3620682,1.10394446 L29.1238205,15.4714919 L44.4834654,15.4714919 C45.1040547,15.4669374 45.6559866,15.865131 45.847289,16.4554281 C46.0385914,17.0457252 45.8251153,17.6918966 45.3197896,18.0521171 L32.9094637,26.8906392 L37.659289,41.2205029 C37.8492978,41.8088537 37.6399199,42.4526832 37.1401666,42.8167858 C36.6404132,43.1808884 35.963305,43.1829213 35.4613737,42.8218261 L23,33.9484823 L10.5391034,42.8237342 C10.0368835,43.1855662 9.35893267,43.1835738 8.85884877,42.8187963 C8.35876487,42.4540187 8.14989861,41.8091377 8.34118809,41.2205029 L13.0910134,26.8887312 L0.680210361,18.0511631 C0.174884727,17.6909426 -0.0385914063,17.0447712 0.152710977,16.4544741 C0.34401336,15.864177 0.89594535,15.4659834 1.51653456,15.4705379 L16.8761795,15.4705379 L21.6379318,1.10394446 C21.8345878,0.519032587 22.3828306,0.125 23,0.125 Z M22.9999796,3.61638342 L18.3804527,17.5538712 L3.57341884,17.5538227 L15.5524968,26.0839651 L10.9490362,39.9740092 L22.9998469,31.3908403 L35.0505989,39.9718199 L30.4479632,26.0860159 L42.4267599,17.5548252 L27.6195159,17.5548252 L22.9999796,3.61638342 Z"></path></g></svg>
<g><polygon class="starFill emptyStar" fill="#fff" points="18.3804527 17.5538712 3.57341884 17.5538227 15.5524968 26.0839651 10.9490362 39.9740092 22.9998469 31.3908403 35.0505989 39.9718199 30.4479632 26.0860159 42.4267599 17.5548252 27.6195159 17.5548252 22.9999796 3.61638342"></polygon><path class="starStroke emptyStar" fill="#888" d="M23,0.125 C23.548595,0.125 24.0427295,0.43633439 24.2838822,0.916322114 L24.3620682,1.10394446 L29.1238205,15.4714919 L44.4834654,15.4714919 C45.1040547,15.4669374 45.6559866,15.865131 45.847289,16.4554281 C46.0385914,17.0457252 45.8251153,17.6918966 45.3197896,18.0521171 L32.9094637,26.8906392 L37.659289,41.2205029 C37.8492978,41.8088537 37.6399199,42.4526832 37.1401666,42.8167858 C36.6404132,43.1808884 35.963305,43.1829213 35.4613737,42.8218261 L23,33.9484823 L10.5391034,42.8237342 C10.0368835,43.1855662 9.35893267,43.1835738 8.85884877,42.8187963 C8.35876487,42.4540187 8.14989861,41.8091377 8.34118809,41.2205029 L13.0910134,26.8887312 L0.680210361,18.0511631 C0.174884727,17.6909426 -0.0385914063,17.0447712 0.152710977,16.4544741 C0.34401336,15.864177 0.89594535,15.4659834 1.51653456,15.4705379 L16.8761795,15.4705379 L21.6379318,1.10394446 C21.8345878,0.519032587 22.3828306,0.125 23,0.125 Z M22.9999796,3.61638342 L18.3804527,17.5538712 L3.57341884,17.5538227 L15.5524968,26.0839651 L10.9490362,39.9740092 L22.9998469,31.3908403 L35.0505989,39.9718199 L30.4479632,26.0860159 L42.4267599,17.5548252 L27.6195159,17.5548252 L22.9999796,3.61638342 Z"></path></g> */}